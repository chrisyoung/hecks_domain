require_relative '<%= folder_name %>/factories'
require_relative '<%= folder_name %>/invariants'
<% if is_a?(Head) %>
require_relative '<%= folder_name %>/repository'
require_relative '<%= folder_name %>/commands'
require_relative '<%= folder_name %>/queries'
require_relative '<%= folder_name %>/events'
require_relative '<%= folder_name %>/subscribers'
<% end %>

module <%= @aggregate.domain.name %>
  module <%= @aggregate.name %>
    class <%= @name %>
      include HecksDomain::Factories::FactoryLoader
      include HecksDomain::Invariants::InvariantLoader
      <%= 'include HecksDomain::Commands::CommandLoader' if is_a?(Head) %>
      <%= 'include HecksDomain::Queries::QueryLoader' if is_a?(Head) %>

      attr_reader <%= public_accessors %>

      def initialize(<%= initializer_attributes %>)
      <% @fields.each do |field| %>
        <%= "@#{field.name} = #{field.initial_state}" %>
      <% end %>
      end
      <% boolean_accessors.each do |field| -%>
      
      def <%= field.name %>?
        @<%= field.name %>
      end
      <% end %>
      <% list_accessors.each do |field| -%>

      def <%= field.name %>
        @<%= field.name %>.clone.freeze
      end
      <% end %>

      private

      attr_writer <%= private_accessors %>
    end
  end
end