module <%= @aggregate.domain.name %>
  module Domain
    module <%= @aggregate.name %>
      class <%= @name %>
        <%= 'include Support::Head' if is_a?(Head) %>
        include Support::DomainObject

        attr_reader <%= public_accessors %>

        def initialize(<%= initializer_attributes %>)
        <% @fields.each do |field| %>
          <%= "@#{field.name} = #{field.initial_state}" %>
        <% end %>
        end
        <% boolean_accessors.each do |field| -%>
        
        def <%= field.name %>?
          @<%= field.name %>
        end
        <% end %>
        <% list_accessors.each do |field| -%>

        def <%= field.name %>
          @<%= field.name %>.clone.freeze
        end
        <% end %>

        private

        attr_writer <%= private_accessors %>
      end
    end
  end
end