<% if is_a?(Head) %>
['services', 'commands', 'invariants', 'factories', 'repository', 'queries', 'events', 'subscribers'].each do |name|
  Dir[File.dirname(__FILE__) + "/<%= folder_name %>/#{name}/*.rb"].each { |file| require_relative file }
end

require_relative '<%= folder_name %>/repository'
<% end %>

module <%= @aggregate.domain.name %>
  module <%= @aggregate.name %>
    class <%= @name %>
      <% if is_a?(Head) %>
      include HecksDomain::Factories::FactoryLoader
      include HecksDomain::Invariants::InvariantLoader
      include HecksDomain::Commands::CommandLoader
      include HecksDomain::Queries::QueryLoader
      <% end %>

      attr_reader <%= public_accessors %>

      def initialize(<%= initializer_attributes %>)
      <% @fields.each do |field| %>
        <%= "@#{field.name} = #{field.initial_state}" %>
      <% end %>
      end
      <% boolean_accessors.each do |field| -%>
      
      def <%= field.name %>?
        @<%= field.name %>
      end
      <% end %>
      <% list_accessors.each do |field| -%>

      def <%= field.name %>
        @<%= field.name %>.clone.freeze
      end
      <% end %>

      private

      attr_writer <%= private_accessors %>
    end
  end
end