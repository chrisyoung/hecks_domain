require_relative '<%= folder_name %>/factories'
<% if is_a?(Head) %>
require_relative '<%= folder_name %>/repository'
require_relative '<%= folder_name %>/commands'
<% end %>

module <%= @aggregate.domain.name %>
  module <%= @aggregate.name %>
    class <%= @name %>
      include Helpers::FactoryLoader
      <%= 'include Helpers::Repository' if is_a?(Entity) %>
      <%= 'include Helpers::CommandLoader' if is_a?(Head) %>

      attr_accessor <%= ':id, ' if is_a?(Entity) %><%= 
        @fields.map do |field|
          "#{':'}#{field.name.to_s}" 
        end.join(', ') 
      %>

      def initialize <%= @fields.select do |field| 
        !field.read_only?
      end.map do |field|
        field.attribute_name
      end.join(', ') %>
        <% @fields.each do |field| %>
        <% if field.read_only? %>
          <% if field.is_a?(ListField) %>
        <%= "@#{field.name} = []" %>
          <% else %>
        <%= "@#{field.name} = nil" %>
          <% end %>
        <% else %>
        @<%= field.name %> = <%= field.name %>
        <% end %>
        <% end %>
      end

      <% @fields.each do |field| %>
      <% if field.is_a?(BooleanField) %>
      def <%= field.name %>?
        @<%= field.name %>
      end
      <% end %>
      <% end %>
    end
  end
end